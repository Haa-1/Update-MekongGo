package com.example.researchproject.Chat;

import android.content.Context;
import android.graphics.Color;
import android.text.SpannableString;
import android.text.style.ForegroundColorSpan;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import io.noties.markwon.Markwon;
import io.noties.markwon.image.ImagesPlugin;
import io.noties.markwon.image.glide.GlideImagesPlugin;
import io.noties.markwon.linkify.LinkifyPlugin;

import com.bumptech.glide.Glide;
import com.example.researchproject.R;

import java.util.List;

public class ChatAdapter extends RecyclerView.Adapter<ChatAdapter.ChatViewHolder> {

    private final Context context;
    private final List<ChatMessage> chatMessages;
    private final Markwon markwon; // üëâ Markwon ƒë·ªÉ hi·ªÉn th·ªã Markdown

    public ChatAdapter(Context context, List<ChatMessage> chatMessages) {
        this.context = context;
        this.chatMessages = chatMessages;
        // ‚úÖ Kh·ªüi t·∫°o Markwon

        // ‚úÖ C·∫•u h√¨nh Markwon h·ªó tr·ª£ ·∫£nh v√† URL
        this.markwon = Markwon.builder(context)
                .usePlugin(ImagesPlugin.create())
                .usePlugin(GlideImagesPlugin.create(Glide.with(context))) // Glide ƒë·ªÉ t·∫£i ·∫£nh
                .usePlugin(LinkifyPlugin.create()) // T·ª± ƒë·ªông nh·∫≠n di·ªán URL
                .build();
    }

    @NonNull
    @Override
    public ChatViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.item_chat, parent, false);
        return new ChatViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull ChatViewHolder holder, int position) {
        ChatMessage message = chatMessages.get(position);

        // üî• N·∫øu l√† ph·∫£n h·ªìi t·ª´ AI ‚Üí √°p d·ª•ng Markdown
        if (!message.isUser()) {
            markwon.setMarkdown(holder.txtMessage, message.getMessage());
        } else {
            // üí¨ N·∫øu l√† ng∆∞·ªùi d√πng ‚Üí ch·ªâ hi·ªÉn th·ªã vƒÉn b·∫£n b√¨nh th∆∞·ªùng
            holder.txtMessage.setText(message.getMessage());
        }

        // üé® T·∫°o Spannable ƒë·ªÉ l√†m n·ªïi b·∫≠t t·ª´ kh√≥a v√† emoji
        SpannableString spannable = new SpannableString(holder.txtMessage.getText());

        // üéâ List emoji ho·∫∑c t·ª´ kh√≥a c·∫ßn l√†m n·ªïi b·∫≠t
        String[] highlights = {"Meko AI", "üòä", "üéâ", "üöÄ", "üî•", "üí°"};

        for (String highlight : highlights) {
            int index = message.getMessage().indexOf(highlight);
            while (index >= 0) {
                if (highlight.length() > 0) { // ‚úÖ Ki·ªÉm tra ƒë·ªô d√†i
                    spannable.setSpan(new ForegroundColorSpan(Color.parseColor("#1569AB")),
                            index, index + highlight.length(), SpannableString.SPAN_EXCLUSIVE_EXCLUSIVE);
                }
                index = message.getMessage().indexOf(highlight, index + 1); // T√¨m c√°c v·ªã tr√≠ ti·∫øp theo
            }
        }


        // üëâ G√°n l·∫°i sau khi ch·ªânh ƒë·ªãnh d·∫°ng
        holder.txtMessage.setText(spannable);

        // üí° ƒê·ªïi avatar v√† m√†u n·ªÅn d·ª±a theo AI ho·∫∑c User
        if (message.isUser()) {
            holder.imgAvatar.setImageResource(R.drawable.user); // Icon ng∆∞·ªùi d√πng
            holder.txtMessage.setBackgroundResource(R.drawable.bg_chat_bubble_user); // N·ªÅn m√†u xanh
        } else {
            holder.imgAvatar.setImageResource(R.drawable.search_icon); // Icon AI
            holder.txtMessage.setBackgroundResource(R.drawable.bg_chat_bubble_ai); // N·ªÅn m√†u x√°m
        }
    }

    @Override
    public int getItemCount() {
        return chatMessages.size();
    }

    static class ChatViewHolder extends RecyclerView.ViewHolder {
        TextView txtMessage;
        ImageView imgAvatar;

        public ChatViewHolder(@NonNull View itemView) {
            super(itemView);
            txtMessage = itemView.findViewById(R.id.txtMessage);
            imgAvatar = itemView.findViewById(R.id.imgAvatar);
        }
    }
}